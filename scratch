Eratosthenes(n) {
  a[1] := 0                          
  for i := 2 to n do a[i] := 1
  p := 2
  while p^2  <  n do {
    j := p^2
    while (j  <  n) do {             
      a[j] := 0
      j := j+p
    }
    repeat p := p+1 until a[p] = 1   
  }
  return(a)
}

Starting with index 2 for array a to index n, set array a[i] = 1

1/ For numbers less than n, square p starting with p=2. 
2/ Set j=p^2. For numbers j less than n, remove that number.
3/ Repeat this procedure until array[p] == 1.

Eratosthenes(10)
// 2,3,5,7

array[1] = 0
for i := 2 to 10 do a[2] := 1
p := 2
while 2^2 < 10 do
  j := 2^2
  while (2^2 < 10) do
    a[j] := 0
    j := 2^2 + 2
  repeat p := p+1 until a[p] = 1
  

